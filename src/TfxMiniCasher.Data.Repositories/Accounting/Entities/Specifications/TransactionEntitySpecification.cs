using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Xyz.TForce.Data;

namespace Xyz.TForce.MiniCasher.Data.Repositories.Accounting.Entities.Specifications
{

  public class TransactionEntitySpecification : IEntityTypeConfiguration<Transaction>
  {

    public void Configure(EntityTypeBuilder<Transaction> builder)
    {
      builder.MapToTable("Accounting_Transactions");
      builder.PrimaryKey(x => x.Id,isAutoGenerated: true);
      builder.Index(x => x.TransactionId, name: "UX_TransactionId", isUnique: true);
      builder.Require(x => x.TransactionId);
      builder.Index(x => x.TransactionCode, name: "UX_TransactionCode", isUnique: true);
      builder.MaxLength(x => x.TransactionCode, ColumnLengths.KeyLength);
      builder.Require(x => x.TransactionCode);
      builder.MaxLength(x => x.TransactionName, ColumnLengths.NameLength);
      builder.Require(x => x.TransactionName);
      builder.ManyToOne(x => x.DebitAccountId, x => x.DebitAccount, principalKeyExpression: x => x.AccountId);
      builder.ManyToOne(x => x.CreditAccountId, x => x.CreditAccount, principalKeyExpression: x => x.AccountId);
      builder.RowVersion(x => x.MetaRowVersion);
    }
  }
}
